#!/bin/bash

set -e

# Retries a command on failure.
# $1 - the max number of attempts
# $2... - the command to run
retry() {
    local max_attempts="$${1}"; shift
    local attempt_num=1

    until "$${@}"
    do
        if [ "$${attempt_num}" -eq "$${max_attempts}" ]
        then
            echo "Attempt $${attempt_num} failed and there are no more attempts l
eft!"
            return 1
        else
            echo "Attempt $${attempt_num} failed! Trying again in $${attempt_num}
seconds..."
            sleep $(( attempt_num=attempt_num + 1 ))
        fi
    done
}

install_mount_points() {
	echo "Creating local-storage mount point"
	for ((i=1; i<=${worker_vol_count}; i++))
	do
		sudo mkdir -p /srv/export/vol$${i}
		cat <<EOF | sudo tee /etc/systemd/system/mnt-disks-vol$${i}.mount
[Unit]
Before=local-fs.target

[Mount]
Where=/mnt/disks/vol$${i}
What=/srv/export/vol$${i}
Type=none
Options=bind

[Install]
WantedBy=local-fs.target
EOF
		sudo systemctl enable --now mnt-disks-vol$${i}.mount
	done
}

install() {
	install_mount_points
	echo "Joining cluster"
	discovery_ca_cert_hash=$(openssl x509 -in $HOME/ca.crt -noout -pubkey |openssl rsa -pubin -outform DER 2>/dev/null | sha256sum | cut -d' ' -f1)

	sudo kubeadm join ${fqdn}:6443 --token ${boot_token} --discovery-token-ca-cert-hash sha256:$${discovery_ca_cert_hash}
}

ensure_docker_settings() {
	if [ ! -f /etc/docker/daemon.json ]
	then
		echo "Writing Updated Docker Configuration"
		cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "log-driver": "json-file",
  "live-restore": true,
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF
		sudo systemctl reload docker
		sudo mkdir -p /etc/systemd/system/docker.service.d
		sudo systemctl daemon-reload
	fi
}


upgrade() {
	if [ -f /var/run/docker.sock ]
	then
		ensure_docker_settings
	fi
	echo "Kubeadm installed worker node detected - checking for upgrade"
	install_mount_points
	#echo "Restarting docker service to ensure correct cgroup"
	#sudo systemctl restart docker
	sudo apt-get -qq update -y
	sudo apt-get -qq install -y debconf-utils lvm2
	echo "docker.io docker.io/restart select true" | sudo debconf-set-selections
	if sudo apt-get -qq install kubeadm=${kubernetes_release}-00
	then
		retry 5 sudo kubeadm upgrade node config --kubelet-version=${kubernetes_release}
		sudo apt-get -qq install \
			kubectl=${kubernetes_release}-00 \
			kubelet=${kubernetes_release}-00
	else
		echo "Failed to install kubeadm at version ${kubernetes_release}-00"
		echo "Version installed is at $(dpkg-query --showformat='$${Version}' --show kubeadm)"
	fi
}

if [ -f /etc/kubernetes/kubelet.conf ]
then
	upgrade
else
	install
fi

#!/bin/bash

set -e

# Retries a command on failure.
# $1 - the max number of attempts
# $2... - the command to run
retry() {
    local max_attempts="${1}"; shift
    local attempt_num=1

    until "${@}"
    do
        if [ "${attempt_num}" -eq "${max_attempts}" ]
        then
            echo "Attempt ${attempt_num} failed and there are no more attempts left!"
            return 1
        else
            echo "Attempt ${attempt_num} failed! Trying again in ${attempt_num} seconds..."
            sleep $(( attempt_num=attempt_num + 1 ))
        fi
    done
}

#IPv6 setting check
if [ "$(sysctl -n net.ipv6.conf.all.disable_ipv6)" -eq 0 ]
then
    echo "Active IPv6 detected" >&2
    echo "This manifest set is for creating and maintaining IPv4 only" >&2
    echo "Kubernetes clusters. Consider using the dual stack version" >&2
    exit 10
fi

mkdir -p ~/install
cd ~/install
umask 022

sudo mkdir -p /etc/cni/net.d
cat <<EOF | sudo tee /etc/cni/net.d/99-loopback.conf
{
    "cniVersion": "0.3.1",
    "type": "loopback"
}
EOF

cat <<EOF | sudo tee /etc/sysctl.d/40-kubernetes.conf
net.ipv6.conf.all.forwarding=1
net.ipv4.ip_forward=1
net.ipv6.conf.all.disable_ipv6=1
net.bridge.bridge-nf-call-ip6tables=1
net.bridge.bridge-nf-call-iptables=1
EOF

echo "Resetting sysctl"
retry 5 sudo modprobe -- br_netfilter
retry 5 sudo sysctl --system

echo "Activating kubelet bootstrap services"
sudo systemctl enable kubelet.service

echo "Installing bash completion"
kubectl completion bash | sudo tee /etc/bash_completion.d/kubectl >/dev/null 2>&1

if [ -f /var/run/docker.sock ]
then
	echo "Make docker run in systemd cgroup"
	sudo mkdir -p /etc/docker
	cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "live-restore": true,
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF
	sudo mkdir -p /etc/systemd/system/docker.service.d
	sudo systemctl daemon-reload
	sudo systemctl restart docker

	echo "Activating docker bootstrap services"
	sudo systemctl enable docker.service
	echo "docker.io docker.io/restart select true" | sudo debconf-set-selections -v
elif [ -d /run/containerd ]
then
	echo "Make containerd CRI v1 runtime use systemd cgroup"
	sudo mkdir -p /etc/containerd
	cat <<EOF | sudo tee /etc/containerd/config.toml
[plugins."io.containerd.grpc.v1.cri"]
	systemd_cgroup = true
EOF
sudo systemctl reload-or-restart containerd

	echo "Setting up critools"
	cat <<EOF | sudo tee /etc/crictl.yaml
runtime-endpoint: unix:///run/containerd/containerd.sock
EOF
fi

echo "Making time sync run more often"
cat <<EOF | sudo tee /etc/systemd/timesyncd.conf
[Time]
PollIntervalMaxSec=1024
EOF

echo "Restarting reconfigured services"
sudo systemctl try-restart systemd-timesyncd
